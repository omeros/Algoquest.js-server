{"version":3,"file":"js/app.94720a31.js","mappings":"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","sources":["webpack://largest-square-game/./src/App.vue","webpack://largest-square-game/./src/services/api.service.js","webpack://largest-square-game/./src/cmps/bound-preview.vue","webpack://largest-square-game/./src/cmps/bound-preview.vue?99c1","webpack://largest-square-game/./src/cmps/bound-list.vue","webpack://largest-square-game/./src/cmps/bound-list.vue?cb22","webpack://largest-square-game/./src/store/bound.store.js","webpack://largest-square-game/./src/cmps/MyModal.vue","webpack://largest-square-game/./src/cmps/MyModal.vue?6700","webpack://largest-square-game/./src/views/bound-app.vue","webpack://largest-square-game/./src/views/bound-app.vue?9896","webpack://largest-square-game/./src/App.vue?7ccd","webpack://largest-square-game/./src/main.js","webpack://largest-square-game/webpack/bootstrap","webpack://largest-square-game/webpack/runtime/chunk loaded","webpack://largest-square-game/webpack/runtime/compat get default export","webpack://largest-square-game/webpack/runtime/define property getters","webpack://largest-square-game/webpack/runtime/global","webpack://largest-square-game/webpack/runtime/hasOwnProperty shorthand","webpack://largest-square-game/webpack/runtime/jsonp chunk loading","webpack://largest-square-game/webpack/startup"],"sourcesContent":["<template>\n  <BoundApp/>\n</template>\n\n<script>\nimport BoundApp from './views/bound-app.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    BoundApp\n  }\n}\n</script>\n\n<style>\n#app {\n\n  margin: auto;\n}\n</style>\n","import Axios from 'axios'\r\n\r\n// const BASE_URL = process.env.NODE_ENV === 'production'\r\n//     ? ''\r\n//     : '//localhost:3001'\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3001/api/'\r\n    \r\nvar axios = Axios.create({\r\n  withCredentials: true\r\n})\r\n\r\nexport const boundService = {\r\n  postBoundToAlgoquest\r\n}\r\n\r\nasync function postBoundToAlgoquest(mainBound,bounds){\r\n  const apiUrl = `${BASE_URL}algoquest`;\r\n\r\n  // Data to send in the request body\r\n  const data = {mainBound,bounds };\r\n  \r\n  // Make a POST request\r\n  return axios.post(apiUrl, data)\r\n    .then((response) => {\r\n      console.log('Post created successfully:', response.data);\r\n      return response.data\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error creating post:', error.message);\r\n    });\r\n}","\r\n\r\n  <template>\r\n    <div ref=\"elementRef\" class=\"my-element\" :style=\"elementStyle\"></div>\r\n  </template>\r\n  \r\n\r\n  <script setup>\r\n  import { defineProps, ref, watchEffect, watch } from 'vue';\r\n  \r\n  const props = defineProps({\r\n    bound: Object,\r\n    main: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    answer: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  });\r\n  \r\n  const elementRef = ref(null);\r\n  \r\n  const elementStyle = ref({\r\n    position: 'absolute',\r\n    width: '0px',\r\n    height: '0px',\r\n    top: '0px',\r\n    left: '0px',\r\n    border: '',\r\n    backgroundColor: '',\r\n    zIndex: '1',\r\n  });\r\n  \r\n  const border = ref('');\r\n  const bgcColor = ref('');\r\n  const zIndex = ref('1');\r\n  \r\n  watchEffect(() => {\r\n    if (!props.answer) {\r\n      // Non-answer bounds\r\n      if (!props.main) {\r\n        // Cover bound\r\n        const red = getRandomInt(0, 255);\r\n        const green = getRandomInt(0, 255);\r\n        const blue = getRandomInt(0, 255);\r\n        bgcColor.value = `rgba(${red}, ${green}, ${blue}, 0.9)`;\r\n        border.value = '2px solid black';\r\n        zIndex.value = '1';\r\n      } else {\r\n        // Main bound\r\n        bgcColor.value = '#2d68f2';\r\n        border.value = '2px solid black';\r\n        zIndex.value = '1';\r\n      }\r\n  \r\n      // Update styles\r\n      elementStyle.value.backgroundColor = bgcColor.value;\r\n      elementStyle.value.border = border.value;\r\n      elementStyle.value.zIndex = zIndex.value;\r\n  \r\n      // Set dimensions and position immediately\r\n      if (props.bound) {\r\n        const width = props.bound.right - props.bound.left;\r\n        const height = props.bound.up - props.bound.down;\r\n        elementStyle.value.width = `${width}px`;\r\n        elementStyle.value.height = `${height}px`;\r\n        elementStyle.value.top = `${props.bound.down}px`;\r\n        elementStyle.value.left = `${props.bound.left}px`;\r\n      }\r\n  \r\n      // Remove the animation class if present\r\n      if (elementRef.value) {\r\n        elementRef.value.classList.remove('scale-in');\r\n      }\r\n    } else {\r\n      // Answer bound\r\n      bgcColor.value = 'transparent';\r\n      border.value = '5px dashed black';\r\n      zIndex.value = '10';\r\n  \r\n      // Update styles\r\n      elementStyle.value.backgroundColor = bgcColor.value;\r\n      elementStyle.value.border = border.value;\r\n      elementStyle.value.zIndex = zIndex.value;\r\n  \r\n      // The dimensions and animation are handled in the watcher\r\n    }\r\n  });\r\n  \r\n  // Watch for changes in props.bound\r\n  watch(\r\n    () => props.bound,\r\n    (newBound) => {\r\n      if (props.answer && newBound) {\r\n        triggerAnimation(newBound);\r\n      }\r\n    },\r\n    { immediate: true, deep: true }\r\n  );\r\n  \r\n  function triggerAnimation(bound) {\r\n    // Update dimensions and position\r\n    const width = bound.right - bound.left;\r\n    const height = bound.up - bound.down;\r\n    const centerX = (bound.left + bound.right) / 2;\r\n    const centerY = (bound.up + bound.down) / 2;\r\n  \r\n    elementStyle.value.width = `${width}px`;\r\n    elementStyle.value.height = `${height}px`;\r\n    elementStyle.value.left = `${centerX - width / 2}px`;\r\n    elementStyle.value.top = `${centerY - height / 2}px`;\r\n  \r\n    // Remove and re-add the animation class to re-trigger the animation\r\n    if (elementRef.value) {\r\n      // Remove the class\r\n      elementRef.value.classList.remove('scale-in');\r\n  \r\n      // Force reflow to ensure the browser registers the class removal\r\n      void elementRef.value.offsetWidth;\r\n  \r\n      // Add the class back to start the animation\r\n      elementRef.value.classList.add('scale-in');\r\n    }\r\n  }\r\n  \r\n  function getRandomInt(min, max) {\r\n    const minCeil = Math.ceil(min);\r\n    const maxFloor = Math.floor(max);\r\n    return Math.floor(Math.random() * (maxFloor - minCeil) + minCeil);\r\n  }\r\n  </script>\r\n  \r\n\r\n  <style>\r\n  .my-element {\r\n    position: absolute;\r\n    transform-origin: center center;\r\n  }\r\n  \r\n  @keyframes scaleIn {\r\n    from {\r\n      transform: scale(0);\r\n    }\r\n    to {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n  \r\n  .scale-in {\r\n    animation: scaleIn 0.5s forwards;\r\n  }\r\n  </style>\r\n  \r\n\r\n<!-- ************************ -->\r\n<!-- \r\n\r\n<template>\r\n    <div class=\"my-element\" :style=\"elementStyle\"></div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { defineProps, ref, watchEffect, watch } from 'vue';\r\n  \r\n  const props = defineProps({\r\n    bound: Object,\r\n    main: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    answer: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  });\r\n  \r\n  const elementStyle = ref({\r\n    position: 'absolute',\r\n    width: '0px',\r\n    height: '0px',\r\n    top: '0px',\r\n    left: '0px',\r\n    border: '',\r\n    backgroundColor: '',\r\n    zIndex: '1',\r\n  });\r\n  \r\n  const border = ref('');\r\n  const bgcColor = ref('');\r\n  const zIndex = ref('1');\r\n  \r\n  watchEffect(() => {\r\n    if (!props.answer) {\r\n      // Non-answer bounds\r\n      if (!props.main) {\r\n        // Cover bound\r\n        const red = getRandomInt(0, 255);\r\n        const green = getRandomInt(0, 255);\r\n        const blue = getRandomInt(0, 255);\r\n        bgcColor.value = `rgba(${red}, ${green}, ${blue}, 0.5)`;\r\n        border.value = '2px solid black';\r\n        zIndex.value = '1';\r\n        elementStyle.value.backgroundColor = bgcColor.value;\r\n        elementStyle.value.border = border.value;\r\n      } else {\r\n        // Main bound\r\n        bgcColor.value = '#2d68f2';\r\n        border.value = '2px solid black';\r\n        zIndex.value = '1';\r\n      }\r\n  \r\n      // Update styles\r\n      elementStyle.value.backgroundColor = bgcColor.value;\r\n      elementStyle.value.border = border.value;\r\n      elementStyle.value.zIndex = zIndex.value;\r\n  \r\n      // Set dimensions and position immediately\r\n      if (props.bound) {\r\n        const width = props.bound.right - props.bound.left;\r\n        const height = props.bound.up - props.bound.down;\r\n        elementStyle.value.width = `${width}px`;\r\n        elementStyle.value.height = `${height}px`;\r\n        elementStyle.value.top = `${props.bound.down}px`;\r\n        elementStyle.value.left = `${props.bound.left}px`;\r\n      }\r\n  \r\n      // Reset transform and transition\r\n      elementStyle.value.transform = '';\r\n      elementStyle.value.transition = '';\r\n      elementStyle.value.transformOrigin = '';\r\n    } else {\r\n      // Answer bound\r\n      bgcColor.value = 'transparent';\r\n      border.value = '5px dashed black';\r\n      zIndex.value = '10';\r\n  \r\n      // Update styles\r\n      elementStyle.value.backgroundColor = bgcColor.value;\r\n      elementStyle.value.border = border.value;\r\n      elementStyle.value.zIndex = zIndex.value;\r\n  \r\n      // The dimensions and animation are handled in the watcher\r\n    }\r\n  });\r\n  \r\n  // Watch for changes in props.bound\r\n  watch(\r\n    () => props.bound,\r\n    (newBound) => {\r\n      if (props.answer && newBound) {\r\n        triggerAnimation(newBound);\r\n      }\r\n    },\r\n    { immediate: true, deep: true }\r\n  );\r\n  \r\n  function triggerAnimation(bound) {\r\n    // Ensure transform origin is set\r\n    elementStyle.value.transformOrigin = 'center center';\r\n  \r\n    // Set transition before changing transform\r\n    elementStyle.value.transition = 'transform 10s';\r\n  \r\n    // Update dimensions and position\r\n    const width = bound.right - bound.left;\r\n    const height = bound.up - bound.down;\r\n    const centerX = (bound.left + bound.right) / 2;\r\n    const centerY = (bound.up + bound.down) / 2;\r\n  \r\n    elementStyle.value.width = `${width}px`;\r\n    elementStyle.value.height = `${height}px`;\r\n    elementStyle.value.left = `${centerX - width / 2}px`;\r\n    elementStyle.value.top = `${centerY - height / 2}px`;\r\n  \r\n    // Set transform to scale(0) after setting transition\r\n    elementStyle.value.transform = 'scale(0)';\r\n  \r\n    // Use requestAnimationFrame to ensure the browser registers the initial state\r\n    requestAnimationFrame(() => {\r\n      // Trigger the transition to scale(1)\r\n      elementStyle.value.transform = 'scale(1)';\r\n    });\r\n  }\r\n  \r\n  function getRandomInt(min, max) {\r\n    const minCeil = Math.ceil(min);\r\n    const maxFloor = Math.floor(max);\r\n    return Math.floor(Math.random() * (maxFloor - minCeil) + minCeil);\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .my-element {\r\n    position: absolute;\r\n  }\r\n  </style>\r\n   -->\r\n\r\n<!-- /************************************ */ -->\r\n\r\n<!-- <template>\r\n    <div class=\"my-element\" :style=\"elementStyle\"></div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { defineProps, ref, watchEffect, watch } from 'vue';\r\n  \r\n  const props = defineProps({\r\n    bound: Object,\r\n    main: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    answer: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  });\r\n  \r\n  const elementStyle = ref({\r\n    position: 'absolute',\r\n    width: '0px',\r\n    height: '0px',\r\n    top: '0px',\r\n    left: '0px',\r\n    border: '',\r\n    backgroundColor: '',\r\n    zIndex: '1',\r\n  });\r\n  \r\n  const border = ref('');\r\n  const bgcColor = ref('');\r\n  const zIndex = ref('1');\r\n  \r\n  watchEffect(() => {\r\n    if (!props.answer) {\r\n      // Non-answer bounds\r\n      if (!props.main) {\r\n        // Cover bound\r\n        const red = getRandomInt(0, 255);\r\n        const green = getRandomInt(0, 255);\r\n        const blue = getRandomInt(0, 255);\r\n        bgcColor.value = `rgba(${red}, ${green}, ${blue}, 0.5)`;\r\n        border.value = '2px solid black';\r\n        zIndex.value = '1';\r\n        elementStyle.value.backgroundColor = bgcColor.value;\r\n        elementStyle.value.border = border.value;\r\n      } else {\r\n        // Main bound\r\n        bgcColor.value = '#2d68f2';\r\n        border.value = '2px solid black';\r\n        zIndex.value = '1';\r\n      }\r\n  \r\n      // Update styles\r\n      elementStyle.value.backgroundColor = bgcColor.value;\r\n      elementStyle.value.border = border.value;\r\n      elementStyle.value.zIndex = zIndex.value;\r\n  \r\n      // Set dimensions and position immediately\r\n      if (props.bound) {\r\n        const width = props.bound.right - props.bound.left;\r\n        const height = props.bound.up - props.bound.down;\r\n        elementStyle.value.width = `${width}px`;\r\n        elementStyle.value.height = `${height}px`;\r\n        elementStyle.value.top = `${props.bound.down}px`;\r\n        elementStyle.value.left = `${props.bound.left}px`;\r\n      }\r\n  \r\n      // Reset transform and transition\r\n      elementStyle.value.transform = '';\r\n      elementStyle.value.transition = '';\r\n      elementStyle.value.transformOrigin = '';\r\n    } else {\r\n      // Answer bound\r\n      bgcColor.value = 'transparent';\r\n      border.value = '5px dashed black';\r\n      zIndex.value = '10';\r\n  \r\n      // Update styles\r\n      elementStyle.value.backgroundColor = bgcColor.value;\r\n      elementStyle.value.border = border.value;\r\n      elementStyle.value.zIndex = zIndex.value;\r\n  \r\n      // The dimensions and animation are handled in the watcher\r\n    }\r\n  });\r\n  \r\n  // Watch for changes in props.bound\r\n  watch(\r\n    () => props.bound,\r\n    (newBound) => {\r\n      if (props.answer && newBound) {\r\n        triggerAnimation(newBound);\r\n      }\r\n    },\r\n    { immediate: true, deep: true }\r\n  );\r\n  \r\n  function triggerAnimation(bound) {\r\n    // Reset transform to scale(0)\r\n    elementStyle.value.transform = 'scale(0)';\r\n  \r\n    // Ensure transform origin and transition are set\r\n    elementStyle.value.transformOrigin = 'center center';\r\n    elementStyle.value.transition = 'transform 5s';\r\n  \r\n    // Update dimensions and position\r\n    const width = bound.right - bound.left;\r\n    const height = bound.up - bound.down;\r\n    const centerX = (bound.left + bound.right) / 2;\r\n    const centerY = (bound.up + bound.down) / 2;\r\n  \r\n    elementStyle.value.width = `${width}px`;\r\n    elementStyle.value.height = `${height}px`;\r\n    elementStyle.value.left = `${centerX - width / 2}px`;\r\n    elementStyle.value.top = `${centerY - height / 2}px`;\r\n  \r\n    // Use requestAnimationFrame to ensure the browser registers the initial state\r\n    requestAnimationFrame(() => {\r\n      // Trigger the transition to scale(1)\r\n      elementStyle.value.transform = 'scale(1)';\r\n    });\r\n  }\r\n  \r\n  function getRandomInt(min, max) {\r\n    const minCeil = Math.ceil(min);\r\n    const maxFloor = Math.floor(max);\r\n    return Math.floor(Math.random() * (maxFloor - minCeil) + minCeil);\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .my-element {\r\n    position: absolute;\r\n  }\r\n  </style>\r\n   -->\r\n<!-- *************************************************** -->\r\n\r\n<!-- <template>\r\n    <div class=\"my-element\" :style=\"elementStyle\"></div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { defineProps, ref, watchEffect, nextTick } from 'vue';\r\n  \r\n  const props = defineProps({\r\n    bound: Object,\r\n    main: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    answer: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  });\r\n  \r\n  const elementStyle = ref({\r\n    position: 'absolute',\r\n    width: '0px',\r\n    height: '0px',\r\n    top: '0px',\r\n    left: '0px',\r\n    border: '',\r\n    backgroundColor: '',\r\n    zIndex: '1',\r\n    // Transition and transform will be set conditionally\r\n  });\r\n  \r\n  const border = ref('');\r\n  const bgcColor = ref('');\r\n  const zIndex = ref('1');\r\n  \r\n  watchEffect(() => {\r\n    // Update common styles\r\n    elementStyle.value.backgroundColor = bgcColor.value;\r\n    elementStyle.value.border = border.value;\r\n    elementStyle.value.zIndex = zIndex.value;\r\n  \r\n    if (!props.answer) {\r\n      // Non-answer bounds\r\n      // ... existing code ...\r\n      // Ensure transition and transform are reset\r\n      elementStyle.value.transition = '';\r\n      elementStyle.value.transform = '';\r\n      elementStyle.value.transformOrigin = '';\r\n    } else {\r\n      // Answer bound\r\n      bgcColor.value = 'transparent';\r\n      border.value = '5px dashed black';\r\n      zIndex.value = '10';\r\n  \r\n      if (props.bound) {\r\n        const width = props.bound.right - props.bound.left;\r\n        const height = props.bound.up - props.bound.down;\r\n        const centerX = (props.bound.left + props.bound.right) / 2;\r\n        const centerY = (props.bound.up + props.bound.down) / 2;\r\n  \r\n        // Position the element centered at (centerX, centerY)\r\n        elementStyle.value.width = `${width}px`;\r\n        elementStyle.value.height = `${height}px`;\r\n        elementStyle.value.left = `${centerX - width / 2}px`;\r\n        elementStyle.value.top = `${centerY - height / 2}px`;\r\n  \r\n        // Set transform origin to center\r\n        elementStyle.value.transformOrigin = 'center center';\r\n  \r\n        // Start from scale(0)\r\n        elementStyle.value.transform = 'scale(0)';\r\n  \r\n        // Apply transition to transform\r\n        elementStyle.value.transition = 'transform 1s';\r\n  \r\n        // Debugging: Log before nextTick\r\n        console.log('Before nextTick:', elementStyle.value);\r\n  \r\n        // Trigger the transition to scale(1) after DOM updates\r\n        nextTick(() => {\r\n          elementStyle.value.transform = 'scale(1)';\r\n          console.log('After setting transform to scale(1):', elementStyle.value);\r\n        });\r\n      }\r\n    }\r\n  });\r\n  </script>\r\n  \r\n  <style>\r\n  .my-element {\r\n    position: absolute;\r\n    /* No transition here; it's applied conditionally */\r\n  }\r\n  </style>\r\n   -->\r\n\r\n\r\n<!-- *************************************************************** -->\r\n<!-- <template>\r\n    <div class=\"my-element\" :style=\"elementStyle\"></div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { defineProps, ref, watchEffect } from 'vue';\r\n  \r\n  const props = defineProps({\r\n    bound: Object,\r\n    main: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    answer: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  });\r\n  \r\n  const elementStyle = ref({\r\n    position: 'absolute',\r\n    width: '0px',\r\n    height: '0px',\r\n    top: '0px',\r\n    left: '0px',\r\n    border: '',\r\n    backgroundColor: '',\r\n    zIndex: '1',\r\n    // Transition will be set conditionally\r\n  });\r\n  \r\n  const border = ref('');\r\n  const bgcColor = ref('');\r\n  const zIndex = ref('1');\r\n  \r\n  watchEffect(() => {\r\n\r\n    // Update common styles\r\n    elementStyle.value.backgroundColor = bgcColor.value;\r\n    elementStyle.value.border = border.value;\r\n    elementStyle.value.zIndex = zIndex.value;\r\n  \r\n    if (!props.answer) {\r\n      // Non-answer bounds\r\n        if (!props.main) {\r\n            // Cover bound\r\n            \r\n            const red = getRandomInt(0, 255);\r\n            const green = getRandomInt(0, 255);\r\n            const blue = getRandomInt(0, 255);\r\n            bgcColor.value = `rgba(${red}, ${green}, ${blue}, 0.9)`;\r\n            border.value = '2px solid black';\r\n            elementStyle.value.backgroundColor = bgcColor.value;\r\n            elementStyle.value.border = border.value;\r\n            console.log('Element Style======== cover Bound ======>:', elementStyle.value, ' bgcColor.value :', bgcColor.value );\r\n\r\n        } else {\r\n            // Main bound\r\n            bgcColor.value = '#2d68f2';\r\n            border.value = '2px solid black';\r\n            console.log('Element Style======== main Bound ======>:', elementStyle.value);\r\n        }\r\n        // Set dimensions immediately without transition\r\n        if (props.bound) {\r\n            elementStyle.value.width = `${props.bound.right - props.bound.left}px`;\r\n            elementStyle.value.height = `${props.bound.up - props.bound.down}px`;\r\n            elementStyle.value.top = `${props.bound.down}px`;\r\n            elementStyle.value.left = `${props.bound.left}px`;\r\n            elementStyle.value.transition = ''; // Remove transition\r\n        }\r\n    } else {\r\n        \r\n        // Answer bound\r\n        bgcColor.value = 'transparent';\r\n        border.value = '5px dashed black';\r\n        zIndex.value = '10';\r\n        \r\n        // Start from zero dimensions\r\n        // elementStyle.value.width = '0px';\r\n        // elementStyle.value.height = '0px';\r\n        elementStyle.value.width = `${(props.bound.right - props.bound.left)/2}px`;\r\n        elementStyle.value.height = `${(props.bound.up - props.bound.down)/2}px`;\r\n        elementStyle.value.top = `${props.bound.down}px`;\r\n        elementStyle.value.left = `${props.bound.left}px`;\r\n        \r\n        // Apply transition\r\n        elementStyle.value.transition = 'width 1s, height 1s';\r\n        console.log('Element Style====== Answer Bound ========>:', elementStyle.value);\r\n  \r\n      // Update dimensions to trigger transition\r\n      setTimeout(() => {\r\n        if (props.bound) {\r\n          elementStyle.value.width = `${props.bound.right - props.bound.left}px`;\r\n          elementStyle.value.height = `${props.bound.up - props.bound.down}px`;\r\n        }\r\n      }, 0);\r\n    }\r\n  });\r\n  \r\n  function getRandomInt(min, max) {\r\n    const minCeil = Math.ceil(min);\r\n    const maxFloor = Math.floor(max);\r\n    return Math.floor(Math.random() * (maxFloor - minCeil) + minCeil);\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .my-element {\r\n    position: absolute;\r\n    /* Transition is applied conditionally in the script */\r\n  }\r\n  </style>\r\n  \r\n\r\n -->\r\n\r\n\r\n\r\n<!-- /*********************************************** */ -->\r\n\r\n\r\n\r\n\r\n\r\n<!-- <template>\r\n    <div class=\"my-element\" :style=\"elementStyle\">\r\n    </div>\r\n  </template>\r\n  \r\n<script setup>\r\nimport { defineProps, ref, watchEffect, watch } from 'vue';\r\n\r\nconst props = defineProps({\r\n  bound: Object,\r\n  main: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  answer: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n});\r\n\r\nconst elementStyle = ref({\r\n  position: 'absolute',\r\n  width: '0px', // Start from 0 to animate from 0 to target size\r\n  height: '0px',\r\n  top: '0px',\r\n  left: '0px',\r\n  border: '',\r\n  backgroundColor: '',\r\n  zIndex: '1',\r\n});\r\n\r\nconst border = ref('');\r\nconst bgcColor = ref('');\r\nconst zIndex = ref('1');\r\n\r\nwatchEffect(() => {\r\n  if (!props.answer) {\r\n    elementStyle.value.transition = ''; // Remove transition\r\n    if (!props.main) {\r\n      // Cover bound\r\n        const red = getRandomInt(0, 255);\r\n        const green = getRandomInt(0, 255);\r\n        const blue = getRandomInt(0, 255);\r\n        bgcColor.value = `rgba(${red}, ${green}, ${blue}, 0.5)`;\r\n        border.value = '2px solid black';\r\n    } else {\r\n      // Main bound\r\n        bgcColor.value = '#2d68f2';\r\n        border.value = '2px solid black';\r\n    }\r\n    \r\n  } else {\r\n    // Answer bound\r\n    bgcColor.value = 'transparent';\r\n    border.value = '5px dashed black';\r\n    zIndex.value = '10';\r\n    elementStyle.value.transition = 'width 1s, height 1s';\r\n  }\r\n\r\n  // Update elementStyle with computed values\r\n  elementStyle.value.backgroundColor = bgcColor.value;\r\n  elementStyle.value.border = border.value;\r\n  elementStyle.value.zIndex = zIndex.value;\r\n});\r\n\r\n// Watch for changes in props.bound and update elementStyle accordingly\r\nwatch(\r\n  () => props.bound,\r\n  (newBound) => {\r\n    if (newBound) {\r\n      // Compute new dimensions and positions\r\n      const width = `${newBound.right - newBound.left}px`;\r\n      const height = `${newBound.up - newBound.down}px`;\r\n      const top = `${newBound.down}px`;\r\n      const left = `${newBound.left}px`;\r\n\r\n      // Update elementStyle to trigger transitions\r\n      elementStyle.value.width = width;\r\n      elementStyle.value.height = height;\r\n      elementStyle.value.top = top;\r\n      elementStyle.value.left = left;\r\n    }\r\n  },\r\n  { immediate: true }\r\n);\r\n\r\nfunction getRandomInt(min, max) {\r\n  const minCeil = Math.ceil(min);\r\n  const maxFloor = Math.floor(max);\r\n  return Math.floor(Math.random() * (maxFloor - minCeil) + minCeil);\r\n}\r\n</script>\r\n\r\n  \r\n  <style>\r\n  .my-element {\r\n    position: absolute;\r\n    transition: width 1s, height 1s, top 1s, left 1s;\r\n  }\r\n  </style>\r\n  \r\n -->\r\n\r\n\r\n<!-- /////****************************************// -->\r\n<!-- <template>\r\n    <div  class=\"my-element\" >\r\n    </div>\r\n</template>\r\n    \r\n    \r\n<script setup >\r\nimport { defineProps,onBeforeMount ,watchEffect,computed } from 'vue'; // Import defineProps\r\n\r\nconst props = defineProps({\r\n    bound: {\r\n        type: Object,\r\n    },\r\n    main: {\r\n        type: Boolean,\r\n        default: false,\r\n    },\r\n    answer: {\r\n        type: Boolean,\r\n        default: false,\r\n    },\r\n    });\r\n\r\n\r\n    let myWidth \r\n    let myHeight\r\n    let myTop\r\n    let myButtomt\r\n    let myLeft\r\n    let myRight\r\n    // let red\r\n    // let green \r\n    // let blue\r\n    console.log('props.bound!!!!!!!!!!!!!!!!!!!!!!1111:', props.bound);\r\n\r\n    if(props.bound){ \r\n        if(props.answer){\r\n            console.log(' on bound-preview - bound answer:===========>:', props.bound);\r\n        }\r\n        // const leftReactive = ref(props.bound.left);\r\n        // const rightReactive = ref(props.bound.right);\r\n        // const upReactive = ref(props.bound.up);\r\n        // const downReactive = ref(props.bound.down);\r\n\r\n        // Example: Log the reactive values when they change\r\n        watchEffect(() => {\r\n            // ... other properties ...\r\n            myWidth = computed(() => {\r\n                return props.bound.right - props.bound.left + 'px';\r\n            });\r\n            myHeight = computed(() => {\r\n                return props.bound.up - props.bound.down + 'px';\r\n            });\r\n            myTop = computed(() => {\r\n                return props.bound.up  + 'px';\r\n            });\r\n            myButtomt = computed(() => {\r\n                return  props.bound.down + 'px';\r\n            });\r\n            myLeft = computed(() => {\r\n                return props.bound.left + 'px';\r\n            });\r\n            myRight = computed(() => {\r\n                return  props.bound.right + 'px';\r\n            });\r\n            // if(props.answer){\r\n            //     console.log('watchEffect - on bound-preview - bound answer:, myWidth:',myWidth, 'myHeight:',myHeight, 'myTop:',myTop, 'myButtomt: ',myButtomt, \"myLeft: \",myLeft, 'myRight: ',myRight);\r\n                \r\n            // }\r\n        })\r\n    }\r\n\r\n    const borderCollapse = computed(() => {\r\n            return props.answer ? 'collapse' : 'separate'; // Simulate border collapse behavior\r\n        });\r\n    // let myWidth = rightReactiv.value - leftReactiv.value\r\n    // let myWidth =  props.bound.right -  props.bound.left \r\n\r\n    // // let myHeight = upReactiv.value - downReactiv.value \r\n    // let myHeight = props.bound.up-  props.bound.down \r\n\r\n    // let myHeight = downReactiv.value - upReactiv.value\r\n    // console.log('props.bound.left  in boundView!!:',props.bound.left  );\r\n    console.log('myHeight in boundView:',myHeight);\r\n    let bgcColor = ''\r\n    let border = ''\r\n    let zIndex = 1\r\n    let shadowParameters = ''\r\n    \r\n    onBeforeMount(() => {\r\n        console.log('onBeforeMount:');\r\n        if(!props.answer){\r\n            if(!props.main){  // cover bound\r\n                let red = getRandomInt(0,255)\r\n                let green = getRandomInt(0,255)\r\n                let blue = getRandomInt(0,255)\r\n                bgcColor =  `rgba(${red},${green},${blue})`;\r\n                border = '2px solid black'\r\n            }else if(props.main){ // Main Bound\r\n                border = '2px solid black'\r\n                bgcColor =  '#2d68f2';\r\n            }\r\n        }else{\r\n            border = '5px dashed black'\r\n            bgcColor = 'transparent' // '#0000003b' //'transparent'\r\n            zIndex = 10\r\n            // shadowParameters = '6px 5px 20px 0px'\r\n        }\r\n    });\r\n    \r\n    function getRandomInt(min, max) {\r\n        const minCeiled = Math.ceil(min);\r\n        const maxFloored = Math.floor(max);\r\n      return Math.floor(Math.random() * (maxFloored - minCeiled) + minCeiled); // The maximum is exclusive and the minimum is inclusive\r\n    }\r\n// export\r\n    </script>\r\n\r\n<style>\r\n.my-element {\r\n    position: absolute;\r\n    width: v-bind('myWidth');\r\n    height:v-bind('myHeight');\r\n    top:v-bind('myButtomt');\r\n    bottom:v-bind('myTop');\r\n    left:v-bind('myLeft');\r\n    right:v-bind('myRight');\r\n    border: v-bind('border');\r\n    background-color: v-bind('bgcColor');\r\n    z-index: v-bind('zIndex');\r\n    border-collapse: v-bind(borderCollapse);\r\n    box-shadow: v-bind(shadowParameters);\r\n}\r\n.bound-preview-container{\r\n    \r\n}\r\n</style> -->","import script from \"./bound-preview.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./bound-preview.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./bound-preview.vue?vue&type=style&index=0&id=30aa27a3&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"bound-list-container\">\r\n    <BoundPreview :bound=\"props.answerBound\"  :main=\"false\" :answer=\"true\" />\r\n    <BoundPreview :bound=\"props.mainBound\"  :main=\"true\" :answer=\"false\" />\r\n    <div v-for=\"(bound, i) in props.bounds\" :key=\"i\">\r\n      <BoundPreview :bound=\"bound\" :main=\"false\" :answer=\"false\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup >\r\nimport { defineProps } from 'vue'; \r\nimport BoundPreview from './bound-preview.vue';\r\n\r\nconst props = defineProps({\r\n  bounds: {\r\n      type: Array,\r\n      default: () => []\r\n  },\r\n  mainBound: {\r\n      type: Object,\r\n      default: () => ({})\r\n  },\r\n  answerBound: {\r\n      type: Object,\r\n      default: () => ({})\r\n  }\r\n});\r\n</script>\r\n<style>\r\n.bound-list-container{\r\n  position: relative;\r\n}\r\n</style>","import script from \"./bound-list.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./bound-list.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./bound-list.vue?vue&type=style&index=0&id=e7a95192&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineStore } from 'pinia'\r\n// mainBound: { left: 0; right: 0; up: 0; down: 0  },\r\n// bounds: [ {left: 0; right: 0; up: 0; down: 0  }]\r\n// const { mainBound } = storeToRefs(boundStore);\r\n\r\nexport const boundStore = defineStore('bound.store', {\r\n  \r\n  // state (){ \r\n  //     return{\r\n  //         mainBound: { left: 10, right: 1500, up: 500, down: 0  },\r\n  //         bounds: [ {left: 20, right: 100, up: 50, down: 0  }]\r\n  //     }\r\n  // },\r\n  state: () => ({\r\n    mainBound: { left: null, right: null, up: null, down: null  },\r\n    bounds: [],\r\n    answerBound: { left: null, right: null, up: null, down: null  }\r\n  }),\r\n  getters: {\r\n    getBounds: (state) => {\r\n      console.log('store - getBounds- state.bounds:',state.bounds);\r\n      return state.bounds\r\n    },\r\n    getMainBound: (state)=>{\r\n      console.log('store - getMainBound- state.mainBound:',state.mainBound);\r\n      return state.mainBound\r\n    }\r\n  },\r\n  actions: {\r\n    addCoverBound(bound) {\r\n      console.log('store addCoverBound-this.bounds:',this.bounds);\r\n      this.bounds.push(bound)\r\n    },\r\n    addCoverBounds(bounds){\r\n      this.bounds = bounds\r\n    },\r\n    addMainBound(bound){\r\n        console.log('store addMainBound-this.mainBound1:',this.mainBound);\r\n        // this.mainBound.left = bound.left\r\n        // this.mainBound.right = bound.right\r\n        // this.mainBound.up = bound.up\r\n        // this.mainBound.down = bound.down\r\n        // this.patch({\r\n        //   mainBound: bound\r\n        // })\r\n        this.mainBound = bound\r\n                console.log('store addMainBound-this.mainBound2:',this.mainBound);\r\n    },\r\n  clearBounds(){\r\n    // $patch({\r\n    //   mainBound :  { left: 0, right: 0, up: 0, down: 0  },\r\n    //   bounds : [{ left: 0, right: 0, up: 0, down: 0  } ] }\r\n    // )\r\n    this.mainBound =  { left: null, right: null, up: null, down: null  }\r\n    this.answerBound =  { left: null, right: null, up: null, down: null  }\r\n    this.bounds = []\r\n    //console.log('clearBounds - this.bounds',this.bounds);\r\n  },\r\n  updateAnswerBound(answeBound){\r\n    console.log('updateAnswerBound:',answeBound);\r\n    this.answerBound = answeBound\r\n  }\r\n  },\r\n  sendDataToAgoquest(){\r\n\r\n  }\r\n})\r\n\r\n\r\n","<template>\r\n  <div class=\"modal-overlay\" @click.self=\"close\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-container\">\r\n        <button class=\"modal-close\" @click=\"close\">&times;</button>\r\n        <slot></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MyModal',\r\n  methods: {\r\n    close() {\r\n      this.$emit('close');\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  z-index: 3;\r\n}\r\n\r\n.modal-content {\r\n\r\n  background-color: #fff;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  top: 15vh;\r\n  max-width: 500px;\r\n  width: 100%;\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.modal-close {\r\n  position: absolute;\r\n  top: 0.5rem;\r\n  right: 1rem;\r\n  background: none;\r\n  border: none;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n}\r\n.modal-container{\r\n  display: flex;\r\n flex-direction: column;\r\n}\r\n</style>\r\n","import { render } from \"./MyModal.vue?vue&type=template&id=329a4440&scoped=true\"\nimport script from \"./MyModal.vue?vue&type=script&lang=js\"\nexport * from \"./MyModal.vue?vue&type=script&lang=js\"\n\nimport \"./MyModal.vue?vue&type=style&index=0&id=329a4440&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-329a4440\"]])\n\nexport default __exports__","<template>\r\n<div class=\"body\">\r\n  <div class=\"header-container\">\r\n    <div class=\"header\" >\r\n      <div class=\"btn-container\">\r\n        <div class=\"btn-container-inner\">\r\n          <div class=\"add-rec-btn\" style=\"\">\r\n            <button id=\"big-add\"  class=\"config-add-btn\"  style=\"cursor: pointer; margin-left: 0vw;\"  @click=\"openMainBoundModal()\">Main Rectangle</button>\r\n            <button id=\"small-add\" class=\"config-add-btn\"  style=\"cursor: pointer; margin-left: 0vw;\"   @click=\"openCoverBoundModal()\"> Cover Rectangle</button>\r\n          </div>\r\n          <div class=\"defalutMainbound\">\r\n            <button class=\"config-btn\" :class=\"{'lazy-btn-activ': isLazy }\" @click=\"defalutMainbound()\">i'm lazy</button>\r\n          </div>\r\n          <div class=\"config-btn-container\">\r\n            <button class=\"new-btn\"  :class=\"{'finish-btn-activ': isFinished }\" @click=\"onClearBounds()\">New</button>\r\n            <button class=\"random-btn\"  :class=\"{'random-btn-activ': isRandom }\" @click=\"onRandomBounds()\">Random</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"run-btn-container\">\r\n          <button class=\"explain-btn\" @click=\"onExplain()\">Explain</button>\r\n          <button class=\"run-btn\"   :class=\"{ 'run-btn-active': isCalculate, 'run-btn-debaunce': isDebounce }\"   @click=\"run()\" :disabled=\"isCalculate\">{{ isCalculate ? 'Calculating' : isFinished ? 'Finished' : 'Run' }} </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div style=\"height: 82vh;\">\r\n    <BoundList :bounds=\"bounds\" :mainBound=\"mainBound\" :answerBound=\"answerBound\"  />\r\n  </div>\r\n  <MyModal v-if=\"isShowMainBoundModal\" @close=\"isShowMainBoundModal = false\">\r\n    <div class=\"modal-inner-container\">\r\n      <h2 style=\"text-align: center;\">Main Bound size</h2>\r\n      <div>\r\n        <div>\r\n          Top <input class=\"bound-input\" type=\"number\" v-model=\"mainBoundY1\">\r\n          Bottom <input class=\"bound-input\" type=\"number\" v-model=\"mainBoundY2\">\r\n        </div>\r\n        <div>\r\n          Left <input class=\"bound-input\" type=\"number\" v-model=\"mainBoundX1\">\r\n          Right <input class=\"bound-input\" type=\"number\" v-model=\"mainBoundX2\">\r\n        </div>\r\n      </div>\r\n      <div style=\"display: flex; justify-content: center;\">\r\n        <button class=\"modal-add-btn\" @click=\"onAddMainBound()\">Add</button>\r\n      <!-- <button class=\"modal-btn\" @click=\"isShowMainBoundModal = false\">Close Modal</button> -->\r\n      </div>\r\n    </div>\r\n  </MyModal>\r\n  <MyModal v-if=\"isShowMCoverBoundModal\" @close=\"isShowMCoverBoundModal = false\">\r\n    <div class=\"modal-inner-container\">\r\n      <h2 style=\"text-align: center;\">Cover Bound size</h2>\r\n      <div>\r\n        <div>\r\n          Top <input class=\"bound-input\" type=\"number\" v-model=\"coverBoundY1\">\r\n          Bottom <input class=\"bound-input\" type=\"number\" v-model=\"coverBoundY2\">\r\n        </div>\r\n        <div>\r\n          Left <input class=\"bound-input\" type=\"number\" v-model=\"coverBoundX1\">\r\n          Right <input class=\"bound-input\" type=\"number\" v-model=\"coverBoundX2\">\r\n        </div>\r\n      </div>\r\n      <div style=\"display: flex; justify-content: center;\">\r\n        <button class=\"modal-add-btn\" @click=\"onAddCoverBound()\">Add</button>\r\n      </div>\r\n      <!-- <button class=\"modal-close-btn\" @click=\"isShowMCoverBoundModal = false\">Close Modal</button> -->\r\n    </div>\r\n  </MyModal>\r\n  <div  v-if=\"isExplain\" style=\"\" class=\"explain\">\r\n    <!-- <iframe src=\"../assets/readme.pdf\" width=\"100%\" height=\"800px\" ></iframe> -->\r\n    <!-- <iframe  v-if=\"isExplain\" src=\"../assets/img/readme.pdf\" width=\"100%\" height=\"800px\" ></iframe> -->\r\n    <iframe  src=\"https://res.cloudinary.com/omerphoto/image/upload/v1731424640/readme_yltroq.pdf\" name=\"iframe_a\"  height=\"100%\" width=\"60%\" title=\"Iframe Example\"></iframe>\r\n  </div>\r\n  <div v-if=\"isXError\" style=\"background-color: rgb(128, 209, 35); height: 200px;\"> left should be smaller then rigth</div>\r\n  <div  v-if=\"isYError\"> Top should be bigger then Bottom</div>\r\n</div>\r\n</template>\r\n\r\n\r\n<script setup>\r\n// import { log10 } from 'core-js/core/number';\r\nimport { storeToRefs } from 'pinia'\r\nimport {boundService} from '../services/api.service'\r\nimport BoundList  from '../cmps/bound-list.vue'\r\nimport {boundStore} from '../store/bound.store'\r\nimport{reactive,ref,onUnmounted } from 'vue'\r\nimport MyModal from '../cmps/MyModal.vue';\r\n\r\n    onUnmounted(() => {\r\n      if (debounceTimer) {\r\n        clearTimeout(debounceTimer);\r\n      }\r\n    });\r\n\r\n    const storeBound = boundStore()\r\n    const {mainBound,bounds,answerBound} = storeToRefs(storeBound)\r\n    const runBtn = ref('lightgrey') // Make runBtn reactive using ref\r\n    const explainBtn = ref('rgb(197, 136, 255') // Make runBtn reactive using ref\r\n\r\n    let configBtn = 'lightgrey'\r\n    const boundsReactiv = reactive(bounds)\r\n    const isCalculate = ref(false) // Make isCalculate reactive\r\n    const isFinished = ref(false) // Make isFinished reactive\r\n    const isLazy = ref(true) // Make isFinished reactive\r\n    const isRandom = ref(false) // Make isFinished reactive\r\n    const isDebounce = ref(false);\r\n    const isShowMainBoundModal = ref(false);\r\n    const isShowMCoverBoundModal = ref(false);\r\n    const isXError = ref(false);\r\n    const isYError = ref(false);\r\n    const isExplain = ref(false);\r\n    let debounceTimer = null;\r\n    //const pdfPath = 'https://sugardaddy.co.il/users/search';  // Using the alias '@' to refer to the src directory\r\n\r\n    // const bounds = storeBound.getBounds\r\n    // const mainBound = storeBound.getMainBound\r\n    // const newBound = reactive({ left: 0, rigth: 0, up: 0, down: 0 })\r\n    // const mainBoundReactiv = reactive(mainBound)\r\n    // console.log('mainBoundReactiv:',mainBoundReactiv);\r\n    console.log('boundsReactiv:',boundsReactiv);\r\n\r\n    let mainBoundX1 //= ref()\r\n    let mainBoundX2 //= ref()\r\n    let mainBoundY1 //= ref()\r\n    let mainBoundY2// = ref()\r\n    \r\n    let coverBoundX1  //ref()\r\n    let coverBoundX2  //ref()\r\n    let coverBoundY1 //ref()\r\n    let coverBoundY2 //ref()\r\n    \r\n    function openMainBoundModal(){\r\n      isShowMainBoundModal.value = true\r\n    }\r\n    function openCoverBoundModal(){\r\n      isShowMCoverBoundModal.value = true\r\n    }\r\n\r\n    function onAddMainBound(){\r\n     // isShowMainBoundModal.value = true\r\n      console.log('mainBoundX1:',mainBoundX1);\r\n      console.log('mainBoundX2:',mainBoundX2);\r\n      console.log('mainBoundY1:',mainBoundY1);\r\n      console.log('mainBoundY2:',mainBoundY2);\r\n      if(mainBoundX2<=mainBoundX1){\r\n        isXError.value = true\r\n      }\r\n      if(mainBoundY1<=mainBoundY2){\r\n        isYError.value = true\r\n      }\r\n      const mainBound = {\r\n        left: mainBoundX1,\r\n        right: mainBoundX2,\r\n        up: mainBoundY1,\r\n        down: mainBoundY2\r\n      }\r\n      storeBound.addMainBound(mainBound)\r\n    }\r\n    \r\n    function onAddCoverBound(){\r\n      console.log('coverBoundX1:',coverBoundX1);\r\n      console.log('coverBoundX2:',coverBoundX2);\r\n      console.log('coverBoundY1:',coverBoundY1);\r\n      console.log('coverBoundY2:',coverBoundY2);\r\n      const coverBound = {\r\n        left: coverBoundX1,\r\n        right: coverBoundX2,\r\n        up: coverBoundY1,\r\n        down: coverBoundY2\r\n      }\r\n      storeBound.addCoverBound(coverBound)\r\n    }\r\n\r\n    function onClearBounds(){\r\n      isFinished.value = false\r\n      isRandom.value = false\r\n      isLazy.value = true\r\n      isDebounce.value = false\r\n      storeBound.clearBounds()\r\n    }\r\n    function onRandomBounds(){\r\n      isRandom.value = true\r\n\r\n    // Clear any existing debounce timer\r\n    if (debounceTimer) {\r\n      clearTimeout(debounceTimer);\r\n    }\r\n    // Reset `isDebounce` to false immediately when the function is called\r\n    isDebounce.value = false;\r\n    // Start a new debounce timer\r\n    debounceTimer = setTimeout(() => {\r\n      isDebounce.value = true;\r\n      isRandom.value = false\r\n      runBtn.value  = 'lightgreen'\r\n      // Additional actions can be performed here when `isDebounce` becomes true\r\n    }, 2000); // Debounce duration in milliseconds (e.g., 2000ms = 2 seconds)\r\n\r\n\r\n      const screenWidth = window.innerWidth; // Get screen width\r\n      const screenHeight = window.innerHeight; // Get screen height\r\n      const rigth = getRandomInt(0,screenWidth)\r\n      const left = getRandomInt(0,rigth)\r\n      const up = getRandomInt(0,screenHeight)\r\n      const down = getRandomInt(0,up)\r\n      console.log(left,down);\r\n      const coverBound = {\r\n        left: left,\r\n        right: rigth,\r\n        up: up,\r\n        down: down\r\n      }\r\n      storeBound.addCoverBound(coverBound)\r\n    }\r\n\r\n    function getRandomInt(min, max) {\r\n      const minCeiled = Math.ceil(min);\r\n      const maxFloored = Math.floor(max);\r\n      return Math.floor(Math.random() * (maxFloored - minCeiled) + minCeiled); // The maximum is exclusive and the minimum is inclusive\r\n  }\r\n\r\n  async function run(){\r\n    console.log('run function!');\r\n    runBtn.value = 'rgb(247, 3, 15)'\r\n    isRandom.value = false\r\n    isFinished.value = false\r\n    isDebounce.value = false\r\n    clearTimeout(debounceTimer);\r\n    if(!isCalculate.value){\r\n      try {\r\n          console.log(' run function - !isCalculate');\r\n          isCalculate.value = true\r\n          const ans = await boundService.postBoundToAlgoquest(mainBound.value, bounds.value)\r\n          storeBound.updateAnswerBound(ans)\r\n          isCalculate.value = false\r\n          isFinished.value = true\r\n          isDebounce.value = false;\r\n        } catch (error) {\r\n          console.error('Error running bound service:', error)\r\n        } finally {\r\n          runBtn.value = 'lightgreen' // Reset the button color if needed\r\n          setTimeout(()=>{\r\n            runBtn.value = 'lightgrey' // Reset the button color if needed\r\n          },500)\r\n        }\r\n    }else{\r\n      console.log('calculation in progress!');\r\n    }\r\n    //   left:ans.L ,\r\n    //   right: ans.right,\r\n    //   up: ans.T,\r\n    //   down: ans.B\r\n    // }\r\n    // console.log('run bounds:',bounds.value, 'mainBound:',mainBound.value );\r\n  }\r\n  function defalutMainbound(){\r\n    const screenWidth = window.innerWidth - (window.innerWidth/50) ; // Get screen width\r\n    const screenHeight = window.innerHeight - (window.innerHeight/5); // Get screen height\r\n    isLazy.value = false\r\n    isRandom.value = true\r\n    const mainBound = {\r\n        left: 0,\r\n        right: screenWidth,\r\n        up: screenHeight,\r\n        down: 0\r\n      }\r\n      storeBound.addMainBound(mainBound)\r\n  }\r\n  function onExplain() {\r\n    if(isExplain.value){\r\n      explainBtn.value = 'lightgrey'\r\n    }else{\r\n      explainBtn.value = 'grey'\r\n    }\r\n    isExplain.value = !isExplain.value;  // This will toggle the state each time the button is clicked\r\n  }\r\n// export default {\r\n//   name: 'BoundApp',\r\n//   components: {\r\n//     BoundList\r\n//   }\r\n// }\r\n</script>\r\n\r\n<style>\r\nbody{\r\n margin: 0;\r\n}\r\n.body{\r\n  background-color: #f0f2f5;\r\n \r\n}\r\n.header-container{\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n}\r\n.header{\r\n  display: flex; \r\n  justify-content: center;\r\n  border: 2px inset  #fcfcfc;\r\n  background-color: #ffffff;\r\n  box-shadow: 6px 5px 20px 0px;\r\n  border-radius: 8px;\r\n  margin: 0.5vw  0.5vw;\r\n  width: 30vw;\r\n  min-width: fit-content;\r\n  padding: 1vw;\r\n\r\n}\r\n.bound-input{\r\n  width: 4vw;\r\n  padding: 0.2vw 0.3vw;\r\n  border-radius: 8px;\r\n  margin: 0.2vw;\r\n}\r\n.input-containerr{\r\n  /* width: 100vw; */\r\n  /* border: 2px inset black; */\r\n  /* height: 20vh; */\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.frame{\r\n  width: 100vw;\r\n  height: 100vh;\r\n}\r\n.btn-container{\r\n  display: flex;\r\n  width: 30vw;\r\n}\r\n.btn-container-inner{\r\n  display: flex;\r\n}\r\n\r\n.config-btn-container{\r\n  display: flex;\r\n  flex-direction: column; \r\n  padding: 0vw; \r\n  padding-top: 0vw; \r\n}\r\n\r\n.config-add-btn{\r\n    cursor: pointer;\r\n    margin: 0.2vw;\r\n    background-color: v-bind('configBtn');\r\n    padding: 0.5vw 0.7vw;\r\n    transition: background-color 1s;\r\n\r\n}\r\n.config-btn{\r\n    cursor: pointer;\r\n    margin: 0.2vw;\r\n    background-color: v-bind('configBtn');\r\n    padding: 0.4vw 0.6vw;\r\n    transition: background-color 1s;\r\n}\r\n.new-btn{\r\n  cursor: pointer;\r\n    margin: 0.2vw;\r\n    background-color: v-bind('configBtn');\r\n    padding: 0.4vw 0.6vw;\r\n    transition: background-color 1s;\r\n}\r\n/* .run-btn:hover{\r\n  width: 4vw;\r\n  height: 2.5vw;\r\n} */\r\n\r\n.run-btn-container{\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 0.3vw; \r\n  padding-top: 0vw; \r\n}\r\n.run-btn-debaunce{\r\n  background-color: lightgreen;\r\n}\r\n.run-btn{\r\n    cursor: pointer;\r\n    margin: 0.2vw;\r\n    background-color: v-bind('runBtn');\r\n    padding: 0.4vw 0.7vw;\r\n    width: 5.3vw;\r\n    height: 2vw;\r\n    min-width: fit-content;\r\n    min-height: fit-content;\r\n    transition: width 2s, height 2s, background-color 1s, font-size 1s;\r\n}\r\n.run-btn-active {\r\n  width: 7vw;\r\n  height: 2.5vw;\r\n  font-size: medium;\r\n}\r\n/* .run-btn-debaunce{\r\n  background-color: lightgreen;\r\n} */\r\n.defalutMainbound{\r\n  /* padding: 0.5vw;  */\r\n  padding-top: 0vw;\r\n}\r\n.add-rec-btn{\r\n  /* padding: 0.2vw; */\r\n  margin-left: 0;\r\n  padding-top: 0vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.finish-btn-activ{\r\n  background-color: lightgreen;\r\n}\r\n.lazy-btn-activ{\r\n  background-color: lightgreen;\r\n}\r\n.random-btn{\r\n  cursor: pointer;\r\n  margin: 0.2vw;\r\n  background-color: v-bind('configBtn');\r\n  padding: 0.4vw 0.6vw;\r\n  transition: background-color 1s;\r\n}\r\n.random-btn-activ{\r\n  background-color: lightgreen;\r\n}\r\nbutton{\r\n  border-radius: 8px;\r\n  font-weight: 700;\r\n  color: black;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-btn{\r\n  width: 7vw;\r\n  padding: 0.4vw 0.7vw;\r\n}\r\n.modal-add-btn{\r\n  width: 5vw;\r\n  padding: 0.4vw 0.7vw;\r\n  min-width: 70px;\r\n}\r\n.modal-inner-container{\r\n  /* display: flex;\r\n  flex-direction: column;\r\n  padding: 0vw; */\r\n}\r\n.explain-btn{\r\n  margin: 0.2vw;\r\n  height: 4vh;\r\n  padding: 0.4vw 0.7vw;\r\n  /* background-color: rgb(197, 136, 255); */\r\n  background-color: v-bind('explainBtn');\r\n}\r\n.explain{\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  /* top: 15vh;\r\n  z-index: 3;\r\n  width: 100vw;  */\r\n  top: 10vh;\r\n  /* left:20vw; */\r\n  z-index: 3;\r\n  width: fit-content;\r\n  height: 90%;\r\n  width: 100vw;\r\n\r\n}\r\nimg{\r\n  border-radius: 8px;\r\n  box-shadow: 6px 5px 20px 0px;\r\n\r\n}\r\n@media screen and (max-width: 600px) {\r\n  .header{\r\n    width: 70vw;\r\n  }\r\n    .btn-container{\r\n      flex-direction: column;\r\n      width: 60vw;\r\n    }\r\n    .run-btn{\r\n      width: 18vw;\r\n      height: 7vw;\r\n    }\r\n    .run-btn-active {\r\n    width: 23vw;\r\n    height: 10vw;\r\n    font-size: large;\r\n  }\r\n  .config-btn{\r\n    width: 18vw;\r\n    height:7vw ;\r\n  }\r\n  .config-add-btn{\r\n    width: 20vw;\r\n    height: 10vw ;\r\n    padding: 1vw 1vw;\r\n  }\r\n  .random-btn{\r\n    padding: 3vw 1.5vw;\r\n  }\r\n  .new-btn{\r\n    padding: 3vw;\r\n  }\r\n  .explain-btn{\r\n    height: 7vw;\r\n  }\r\n  .explain{\r\n    top: 15vh;\r\n    height: 60%;\r\n    width: 100vw;\r\n\r\n  }\r\n  iframe{\r\n    width: 90vw;\r\n  }\r\n}\r\n</style>","import script from \"./bound-app.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./bound-app.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./bound-app.vue?vue&type=style&index=0&id=da2d2ad0&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=c04022b2\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=c04022b2&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\n\nconst pinia = createPinia()\nconst app = createApp(App)\n\napp.use(pinia)\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklargest_square_game\"] = self[\"webpackChunklargest_square_game\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(7680); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_BoundApp","BASE_URL","axios","Axios","withCredentials","boundService","postBoundToAlgoquest","async","mainBound","bounds","apiUrl","data","post","then","response","console","log","catch","error","message","props","__props","elementRef","ref","elementStyle","position","width","height","top","left","border","backgroundColor","zIndex","bgcColor","triggerAnimation","bound","right","up","down","centerX","centerY","value","classList","remove","offsetWidth","add","getRandomInt","min","max","minCeil","Math","ceil","maxFloor","floor","random","watchEffect","answer","main","red","green","blue","watch","newBound","immediate","deep","__exports__","boundStore","defineStore","state","answerBound","getters","getBounds","getMainBound","actions","addCoverBound","this","push","addCoverBounds","addMainBound","clearBounds","updateAnswerBound","answeBound","sendDataToAgoquest","class","_createElementBlock","onClick","_cache","_withModifiers","args","$options","close","_createElementVNode","_hoisted_1","_hoisted_2","_renderSlot","_ctx","$slots","undefined","name","methods","$emit","onUnmounted","debounceTimer","clearTimeout","storeBound","storeToRefs","runBtn","explainBtn","configBtn","boundsReactiv","reactive","isCalculate","isFinished","isLazy","isRandom","isDebounce","isShowMainBoundModal","isShowMCoverBoundModal","isXError","isYError","isExplain","mainBoundX1","mainBoundX2","mainBoundY1","mainBoundY2","coverBoundX1","coverBoundX2","coverBoundY1","coverBoundY2","openMainBoundModal","openCoverBoundModal","onAddMainBound","onAddCoverBound","coverBound","onClearBounds","onRandomBounds","setTimeout","screenWidth","window","innerWidth","screenHeight","innerHeight","rigth","minCeiled","maxFloored","run","ans","defalutMainbound","onExplain","components","BoundApp","render","pinia","createPinia","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}